import{_ as s,c as i,o as a,a3 as l}from"./chunks/framework.yy2qzmv1.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{"prev":{"text":"compose","link":"/docker/06.compose/README"},"next":{"text":"nodejs","link":"/node/index"}},"headers":[],"relativePath":"docker/07.制作自定义镜像/README.md","filePath":"docker/07.制作自定义镜像/README.md"}'),n={name:"docker/07.制作自定义镜像/README.md"},e=l(`<h2 id="制作镜像" tabindex="-1">制作镜像 <a class="header-anchor" href="#制作镜像" aria-label="Permalink to &quot;制作镜像&quot;">​</a></h2><p>镜像相当于一个小的<code>操作系统</code>，例如像<code>安装windows系统一样</code>，里面会包含<code>windows系统基本环境</code>、<code>自带的软件包</code>、<code>还有一些启动命令</code> 需要三个要素:</p><ol><li>基础环境</li><li>软件包</li><li>启动命令</li></ol><h2 id="docker-常见指令" tabindex="-1">docker 常见指令 <a class="header-anchor" href="#docker-常见指令" aria-label="Permalink to &quot;docker 常见指令&quot;">​</a></h2><p>参考<a href="https://docs.docker.com/reference/dockerfile/" target="_blank" rel="noreferrer">文档</a></p><ol><li><code>FROM</code>: 指定镜像基础环境</li><li><code>RUN</code>: 运行自定义命令</li><li><code>CMD</code>: 容器启动命令或参数</li><li><code>LABEL</code>: 自定义标签</li><li><code>EXPOSE</code>: 指定曝露端口</li><li><code>ENV</code>: 环境变量</li><li><code>ADD</code>: 添加文件到镜像</li><li><code>COPY</code>: 复制文件到镜像</li><li><code>ENTRYPOINT</code>: 容器固定启动命令</li><li><code>VOLUME</code>: 数据卷</li><li><code>USER</code>: 指定用户和用户组</li><li><code>WORKDIR</code>: 指定默认工作目录</li><li><code>ARG</code>: 指定构建参数</li></ol><h2 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h2><p>如果需要其他语言的，请看<a href="https://docs.docker.com/guides/" target="_blank" rel="noreferrer">文档例子</a></p><ol><li>准备包 准备一个<code>xx.jar</code>包, 将<code>jar包</code>上传到<code>服务器或者对应的本地下</code></li></ol><ul><li>服务器或者 mac</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># vim编辑dockerfile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Dockerfile</span></span></code></pre></div><ul><li>本地 直接创建</li></ul><ol start="2"><li>编写<code>Dockerfile</code>文件</li></ol><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 基础环境</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FROM openjdk:17</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 给标签</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LABEL author=xxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 复制包到镜像中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## app.jar：是你现在的包所在位置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## /app/app.jar: 是放在镜像中的位置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">COPY app.jar /app/app.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 指定启动命令</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## ENTRYPOINT java -jar /app/app.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 也可以使用数组形式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ENTRYPOINT [</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">&quot;java&quot;,&quot;-jar&quot;,&quot;/app/app.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 暴露端口</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXPOSE 8080</span></span></code></pre></div><ol start="3"><li>构建镜像</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## -f &lt;Dockerfile文件路径&gt;: 指定启动的Dockerfile文件路径</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## -t &lt;自定义名:自定义版本&gt;: 也就是--tag, 自定义镜像名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## . : 也就是 ./ , 代表当前目录，也就是将当前目录的 xxx.jar 包指向 Dockerfile 中的 app.jar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Dockerfile文件路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">自定义名:自定义版</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">本</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><ol start="4"><li>查看镜像</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 就可以查看到构建的自定义镜像，</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre></div><ol start="5"><li>启动测试</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 这里的 8080 端口就是你在 Dockerfile 所暴露的端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8989:8080</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">自定义名:自定义版</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">本</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,20),t=[e];function p(h,k,d,o,c,r){return a(),i("div",null,t)}const E=s(n,[["render",p]]);export{F as __pageData,E as default};
